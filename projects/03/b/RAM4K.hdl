// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[9..11], 
             a = Ram0, b = Ram1, c = Ram2, d = Ram3,
             e = Ram4, f = Ram5, g = Ram6, h = Ram7);
    RAM512(in = in , load = Ram0, address = address[0..8], out = Ramout0);
    RAM512(in = in , load = Ram1, address = address[0..8], out = Ramout1);
    RAM512(in = in , load = Ram2, address = address[0..8], out = Ramout2);
    RAM512(in = in , load = Ram3, address = address[0..8], out = Ramout3);
    RAM512(in = in , load = Ram4, address = address[0..8], out = Ramout4);
    RAM512(in = in , load = Ram5, address = address[0..8], out = Ramout5);
    RAM512(in = in , load = Ram6, address = address[0..8], out = Ramout6);
    RAM512(in = in , load = Ram7, address = address[0..8], out = Ramout7);
    Mux8Way16(a = Ramout0, b = Ramout1, c = Ramout2, d = Ramout3,
              e = Ramout4, f = Ramout5, g = Ramout6, h = Ramout7,
              sel = address[9..11], out = out);
}
